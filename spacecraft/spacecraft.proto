// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


//cd this directory
//protoc --go_out=plugins=grpc:. *.proto


syntax = "proto3";

package spacecraft;

service Spacecraft{
	rpc svnUp(SvnUpParam) returns (VersionNum){}
	rpc svnCheckout(SvnCheckoutParams) returns (VersionNum){}
	rpc svnUpToRevision(SvnUpToRevisionParams) returns (VersionNum){}
	rpc svnInfo(SvnUpParam)  returns (ResponseStr){}
	rpc specifiedCommand(SpecifiedCommandParams) returns (ResponseStr){}
	rpc complexCommand(SpecifiedCommandParams) returns (ResponseStr){}
	rpc sendFile(sendFileParams) returns (ResponseStr){}
	rpc getFileList(SvnUpParam) returns (ResponseStr){}
}

//svnUp params
message SvnUpParam {
	string dir = 1;
}

//svnUp response
message VersionNum{
	int32 version = 1;
}

//svnCheckout params
message SvnCheckoutParams {
	string svnUrl = 1;
	string dir = 2;
}

//svnUpToRevision params
message SvnUpToRevisionParams {
	string dir = 1;
	int32 version = 2;
}

message ResponseStr{
	string string = 1;
}

//specifiedCommand params
message SpecifiedCommandParams {
	string command = 1;
	string dir = 2;
}

//sendFile params
message sendFileParams{
	string fileAbsolutePath = 1;
	bytes fileContent = 2;
	string storagePath = 3;
}